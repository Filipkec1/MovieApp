// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieApp.Infrastructure.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MovieApp.Infrastructure.Migrations
{
    [DbContext(typeof(MovieAppContext))]
    partial class MovieAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MovieApp.Core.Models.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = new Guid("19f977cc-3916-4a1f-908c-f48700a40880"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("f33e407e-ea8d-40f0-8e14-c694e513f54b"),
                            Name = "Thriller"
                        });
                });

            modelBuilder.Entity("MovieApp.Core.Models.Entities.CategoryMovie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MovieId");

                    b.ToTable("CategoryMovie");

                    b.HasData(
                        new
                        {
                            Id = new Guid("74600e89-170c-41b7-8aae-48f8ec08630d"),
                            CategoryId = new Guid("19f977cc-3916-4a1f-908c-f48700a40880"),
                            MovieId = new Guid("02d3fa37-f439-4e67-a87a-1dcf1d077ad6")
                        },
                        new
                        {
                            Id = new Guid("8eb369de-0942-4f2d-99ee-6afaad68961b"),
                            CategoryId = new Guid("f33e407e-ea8d-40f0-8e14-c694e513f54b"),
                            MovieId = new Guid("02d3fa37-f439-4e67-a87a-1dcf1d077ad6")
                        });
                });

            modelBuilder.Entity("MovieApp.Core.Models.Entities.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Movie");

                    b.HasData(
                        new
                        {
                            Id = new Guid("02d3fa37-f439-4e67-a87a-1dcf1d077ad6"),
                            Title = "Blade Runner 2049"
                        });
                });

            modelBuilder.Entity("MovieApp.Core.Models.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = new Guid("71fc7674-18c7-4a01-ad55-fbecdfd7feda"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("89432022-e55f-48fb-92d9-29ccd24d7eca"),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("MovieApp.Core.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("799b8043-067a-4c67-8175-e28d431e8e8d"),
                            Hash = "PLDHFD75aPuvzK2XFZPXpw==.pU451GhsQ0RRi0n5AgDGkJCOXv0o+XeZp0rTlxDsulA=",
                            Name = "admin",
                            RoleId = new Guid("71fc7674-18c7-4a01-ad55-fbecdfd7feda")
                        },
                        new
                        {
                            Id = new Guid("1d700ebe-fcd2-4439-9470-2ff1ee635b7d"),
                            Hash = "HqWx1NypREjA4NyDYrrDvw==.2aFPO9MsQ2E6FshrYQNB/aXYfFoGNJNoM9b3V080vrA=",
                            Name = "user",
                            RoleId = new Guid("89432022-e55f-48fb-92d9-29ccd24d7eca")
                        });
                });

            modelBuilder.Entity("MovieApp.Core.Models.Entities.CategoryMovie", b =>
                {
                    b.HasOne("MovieApp.Core.Models.Entities.Category", "Category")
                        .WithMany("CategoryMovie")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieApp.Core.Models.Entities.Movie", "Movie")
                        .WithMany("CategoryMovie")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MovieApp.Core.Models.Entities.User", b =>
                {
                    b.HasOne("MovieApp.Core.Models.Entities.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MovieApp.Core.Models.Entities.Category", b =>
                {
                    b.Navigation("CategoryMovie");
                });

            modelBuilder.Entity("MovieApp.Core.Models.Entities.Movie", b =>
                {
                    b.Navigation("CategoryMovie");
                });

            modelBuilder.Entity("MovieApp.Core.Models.Entities.Role", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
